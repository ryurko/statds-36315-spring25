{
  "hash": "1435bf7535ce3bfee7e083d99cdba6a2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizations and Inference for Areal Data\"\nauthor: \"Prof Ron Yurko\"\nfooter:  \"[statds-36315-spring25](https://ryurko.github.io/statds-36315-spring25/)\"\ndate: 2025-04-09\nengine: knitr\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    pdf-separate-fragments: true\n    slide-number: c/t\n    smaller: true\n    code-line-numbers: true\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n\n\n## Announcements, previously, and today...\n\n::: {style=\"font-size: 95%;\"}\n\n**HW8 is due TONIGHT by 11:59 PM ET**\n\n**You do NOT have lab this week**\n\n:::\n\n. . .\n\n::: {style=\"font-size: 95%;\"}\n\n**Last time:**\n\nThree main types of spatial data:\n\n1. __Point Pattern Data__: lat-long coordinates where events have occurred\n\n2. __Point-Referenced data__: Latitude-longitude (lat-long) coordinates as well as one or more variables specific to those coordinates.\n\n3. __Areal Data__: Geographic regions with one or more variables associated with those regions.\n\nWalked through how to plot point-referenced and point pattern data.\n\n\n**TODAY:** Visualizations and Inference for Areal Data\n\n:::\n\n\n---\n\n## Thinking about areal data\n\n- __Areal Data__: Geographic regions associated with one or more variables specific to those regions\n\n- Areal data will have the following form (example US states data from 1970s):\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstate_data |> dplyr::slice(1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 Ã— 9\n  Population Income Illiteracy `Life Exp` Murder `HS Grad` Frost   Area state  \n       <dbl>  <dbl>      <dbl>      <dbl>  <dbl>     <dbl> <dbl>  <dbl> <chr>  \n1       3615   3624        2.1       69.0   15.1      41.3    20  50708 alabama\n2        365   6315        1.5       69.3   11.3      66.7   152 566432 alaska \n3       2212   4530        1.8       70.6    7.8      58.1    15 113417 arizona\n```\n\n\n:::\n:::\n\n\n\n\n---\n\n## High-level overview of steps\n\n- Need to match the region with the actual geographic boundaries\n\n- Many geographic boundaries/features are stored as \"shapefiles\"\n\n  - i.e., complicated polygons\n  \n- Can contain the lines, points, etc. to represent any geographic feature\n\n- Shapefiles are readily available for countries, states, counties, etc.\n\n\n---\n\n## Access shapefiles using `map_data()` \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(maps)\nstate_borders <- map_data(\"state\") \nhead(state_borders)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       long      lat group order  region subregion\n1 -87.46201 30.38968     1     1 alabama      <NA>\n2 -87.48493 30.37249     1     2 alabama      <NA>\n3 -87.52503 30.37249     1     3 alabama      <NA>\n4 -87.53076 30.33239     1     4 alabama      <NA>\n5 -87.57087 30.32665     1     5 alabama      <NA>\n6 -87.58806 30.32665     1     6 alabama      <NA>\n```\n\n\n:::\n:::\n\n\n\n\n- For example: `map_data(\"world\")`, `map_data(\"state\")`, `map_data(\"county\")` (need to install [`maps` package](https://cran.r-project.org/web/packages/maps/maps.pdf))\n\n- Contains lat/lon coordinates to draw geographic boundaries\n\n---\n\n## Typica workflow for plotting areal data\n\n  1. Get state-specific data\n  \n  2. Get state boundaries\n  \n  3. Merge state-specific data with state boundaries (using `left_join()`)\n  \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nstate_plot_data <- state_borders |>\n  left_join(state_data, by = c(\"region\" = \"state\"))\nhead(state_plot_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       long      lat group order  region subregion Population Income Illiteracy\n1 -87.46201 30.38968     1     1 alabama      <NA>       3615   3624        2.1\n2 -87.48493 30.37249     1     2 alabama      <NA>       3615   3624        2.1\n3 -87.52503 30.37249     1     3 alabama      <NA>       3615   3624        2.1\n4 -87.53076 30.33239     1     4 alabama      <NA>       3615   3624        2.1\n5 -87.57087 30.32665     1     5 alabama      <NA>       3615   3624        2.1\n6 -87.58806 30.32665     1     6 alabama      <NA>       3615   3624        2.1\n  Life Exp Murder HS Grad Frost  Area\n1    69.05   15.1    41.3    20 50708\n2    69.05   15.1    41.3    20 50708\n3    69.05   15.1    41.3    20 50708\n4    69.05   15.1    41.3    20 50708\n5    69.05   15.1    41.3    20 50708\n6    69.05   15.1    41.3    20 50708\n```\n\n\n:::\n:::\n\n\n\n  \n  \n  4. Plot the data\n\n---\n\n## Create a choropleth map with `geom_polygon()`\n\n\n\n\n::: {.cell layout-align=\"center\" output-location='slide'}\n\n```{.r .cell-code}\nstate_plot_data |>\n  ggplot() + \n  geom_polygon(aes(x = long, y = lat, group = group, fill = Illiteracy), \n               color = \"black\") + \n  scale_fill_gradient2(low = \"darkgreen\", mid = \"lightgrey\", \n                       high = \"darkorchid4\", midpoint = 0.95) +\n  theme_void() +\n  coord_map(\"polyconic\") + \n  labs(fill = \"Illiteracy %\") + \n  theme(legend.position = \"bottom\")\n```\n\n::: {.cell-output-display}\n![](22-areal-data_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Uniform size with [`statebins`](https://github.com/hrbrmstr/statebins)\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(statebins)\nstate_data$new_state <- str_to_title(state_data$state)\nstatebins(state_data = state_data, \n          state_col = \"new_state\", value_col = \"Illiteracy\") +\n  theme_statebins()\n```\n\n::: {.cell-output-display}\n![](22-areal-data_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## Many choices for displaying maps...\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://socviz.co/assets/ch-07-election-county-share.png){fig-align='center'}\n:::\n:::\n\n\n\n\n\n---\n\n## Inference for Areal Data\n\nFor areal data, we have the following variables:\n\n+ Geographic region: $g$\n\n+ Outcome variable: $z$\n\n. . .\n\n$g$ is categorical, so visualization/inference involves categorical data.\n\nIf $g$ only has a few categories, can just do ANOVA and side-by-side violins (or other displays we've talked about).\n\n**What to do if there are many regions?**\n\nTwo approaches: Dendrograms and randomization tests.\n\n---\n\n## Dendrograms for Areal Data\n\n**Recall: Dendrograms allow you to see which subjects are _similar_ and which are _dissimilar_ in terms of one or more variables**\n\nIntuition: Allows you to see which geographic regions are similar\n\n. . .\n\nTo create a dendrogram:\n\n1. Define a distance metric in terms of the outcome.\n\n2. Plot a dendrogram.\n\n3. Make the leaf labels correspond to geographic regions.\n\n---\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](22-areal-data_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Visual randomization test\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](22-areal-data_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Visual randomization test\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](22-areal-data_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Recap and next steps\n\n+ Create choropleths for areal data: color regions by variable of interest\n\n  + Requires workflow to join region level data with polygon boundaries for regions\n\n+ Can perform classical type categorical type inference with areal data\n\n+ Use dendrograms to visualize differences between regions based on variable of interest\n\n+ Can perform visual randomization test to test signficance of observed data\n\n. . .\n\n+ **HW8 is due Wednesday! You do NOT have lab this week**\n\n+ **Next time**: Visualizations for text data\n\n+ Recommended reading: [CW Chapter 15 Visualizing geospatial data](https://clauswilke.com/dataviz/geospatial-data.html), [KH Chapter 7 Draw Maps](https://socviz.co/maps.html#maps)\n",
    "supporting": [
      "22-areal-data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}