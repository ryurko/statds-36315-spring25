{
  "hash": "6ed791726b8589cbc91dbb94fbaca0ad",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing 1D Quantitative Data\"\nauthor: \"Prof Ron Yurko\"\nfooter:  \"[statds-36315-spring25](https://ryurko.github.io/statds-36315-spring25/)\"\ndate: 2025-02-03\nengine: knitr\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    pdf-separate-fragments: true\n    slide-number: c/t\n    smaller: true\n    code-line-numbers: true\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n\n\n## Announcements, previously, and today...\n\n::: {style=\"font-size: 80%;\"}\n\n+ **HW2 is due Wednesday by 11:59 PM** \n\n+ **You have Lab 4 again on Friday**\n\nOffice hours schedule:\n\n+ My office hours (BH 132D): Wednesdays and Thursdays @ 2 PM\n\n+ Anna (zoom): Mondays @ 2 PM; and Perry (zoom): Wednesdays @ 11 AM\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n\n+ Can create stacked and side-by-side bar charts to visualize 2D categorical data\n\n+ Perform 2D Chi-squared test to test if two categorical variables are associated with each other\n\n+ Create mosaic plots to visualize 2D categorical data, shade by Pearson residuals\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n**TODAY:**\n\n+ How do we visualize 1D quantitative data?\n\n+ For this week, we'll focus on visualization issues and move to inference next week\n\n:::\n\n---\n\n## 1D Quantitative Data\n\nObservations are collected into a vector $(x_1, \\dots, x_n)$, $x_i \\in \\mathbb{R}$ (or $\\mathbb{R}^+$, $\\mathbb{Z}$)\n\nCommon __summary statistics__ for 1D quantitative data:\n\n. . .\n\n+ __Center__: Mean, median, weighted mean, mode\n\n  + Related to the first moment, i.e., $\\mathbb{E}[X]$\n\n. . .\n\n+ __Spread__: Variance, range, min/max, quantiles, IQR\n\n  + Related to the second moment, i.e., $\\mathbb{E}[X^2]$\n  \n. . .\n\n+ __Shape__: symmetry, skew, kurtosis (\"peakedness\")\n\n  + Related to higher order moments, i.e., skewness is $\\mathbb{E}[X^3]$, kurtosis is $\\mathbb{E}[X^4]$\n  \n\nCompute various statistics with `summary()`, `mean()`, `median()`, `quantile()`, `range()`, `sd()`, `var()`, etc.\n\n---\n\n## Box plots visualize summary statistics\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\npenguins |>\n  ggplot(aes(y = flipper_length_mm)) +\n  geom_boxplot(aes(x = \"\")) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Histograms display 1D continuous distributions\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) +\n  geom_histogram()\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## [Do NOT rely on box plots...](https://www.autodesk.com/research/publications/same-stats-different-graphs)\n\n\n \n---\n\n## Simulate from mixture of Normal distributions\n\nWill sample 100 draws from $N(-1.5, 1)$ and 100 draws from $N(1.5, 1)$\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## Can we trust the default?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(2025)\nfake_data <- \n  tibble(fake_x = c(rnorm(100, -1.5), rnorm(100, 1.5))) |>\n  mutate(component = c(rep(\"left\", 100), rep(\"right\", 100)))\n\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram() +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 15) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 60) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 5) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## What happens as we change the number of bins?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram(bins = 100) +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## Variability of graphs - 30 bins\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(2025)\nfake_data <- \n  tibble(fake_x = c(rnorm(100, -1.5), rnorm(100, 1.5))) |>\n  mutate(component = c(rep(\"left\", 100), rep(\"right\", 100)))\n\nfake_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram() +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## What happens with a different sample?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(1985)\nfake_data2 <- \n  tibble(fake_x = c(rnorm(100, -1.5), rnorm(100, 1.5))) |>\n  mutate(component = c(rep(\"left\", 100), rep(\"right\", 100)))\n\nfake_data2 |>\n  ggplot(aes(x = fake_x)) +\n  geom_histogram() +\n  scale_x_continuous(limits = c(-5, 5))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Variability of graphs - 15 bins\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## Variability of graphs - a few bins\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-13-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## Variability of graphs - too many bins\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-14-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## What about displaying conditional distributions?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(aes(fill = species))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## What about displaying conditional distributions?\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(aes(fill = species),\n                 position = \"identity\", alpha = 0.3)\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Normalize histogram frequencies with density\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(aes(y = after_stat(density), fill = species),\n                 position = \"identity\", alpha = 0.3) \n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Can use density curves instead\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(aes(color = species))\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-18-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n---\n\n## We should NOT fill the density curves\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(aes(fill = species), alpha = .3)\n```\n\n::: {.cell-output-display}\n![](06-1dquant_files/figure-revealjs/unnamed-chunk-19-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n\n---\n\n## Recap and next steps\n\n::: {style=\"font-size: 80%;\"}\n\n+ Visualize 1D quantitative data to inspect center, spread, and shape\n\n+ Boxplots are only a display of summary statistics (i.e., they suck)\n\n+ Histograms display shape of the distribution, but comes with tradeoffs\n\n+ Density curves provide an easy way to visualize conditional distributions\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n+ **HW2 is due Wednesday and you have Lab 4 on Friday**\n\n+ **Next time**: Density estimation\n\n+ Recommended reading: [CW Chapter 7 Visualizing distributions: Histograms and density plots](https://clauswilke.com/dataviz/histograms-density-plots.html)\n\n:::\n\n",
    "supporting": [
      "06-1dquant_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}