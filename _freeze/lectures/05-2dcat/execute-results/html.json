{
  "hash": "11b1cfe8206d96ccc5733f770eb1a54b",
  "result": {
    "markdown": "---\ntitle: \"Visualizations and Inference for 2D Categorical Data\"\nauthor: \"Prof Ron Yurko\"\nfooter:  \"[statds-36315-spring25](https://ryurko.github.io/statds-36315-spring25/)\"\ndate: 2025-01-29\nengine: knitr\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    pdf-separate-fragments: true\n    slide-number: c/t\n    smaller: true\n    code-line-numbers: true\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n## Announcements, previously, and today...\n\n::: {style=\"font-size: 80%;\"}\n\n+ **HW1 is due TONIGHT by 11:59 PM** \n\n+ **You have Lab 3 again on Friday**\n\nOffice hours schedule:\n\n+ My office hours (BH 132D): Wednesdays and Thursdays @ 2 PM\n\n+ Anna (zoom): Mondays @ 2 PM; and Perry (zoom): Wednesdays @ 11 AM\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n\n+ Discussed how similar looking graphics can have very different statistical results (thinking about power)\n\n+ Discussed the challenges of multiple testing\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n**TODAY:**\n\n+ Visuals for 2D categorical data\n\n+ How do we visualize inference for 2D categorical data?\n\n:::\n\n---\n\n## 2D categorical basics\n\n\n---\n\n## 2D categorical basics\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\naddmargins(table(\"Species\" = penguins$species, \"Island\" = penguins$island))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n           Island\nSpecies     Biscoe Dream Torgersen Sum\n  Adelie        44    56        52 152\n  Chinstrap      0    68         0  68\n  Gentoo       124     0         0 124\n  Sum          168   124        52 344\n```\n:::\n:::\n\n\n+ Column and row sums: marginal distributions\n\n+ Values within rows: conditional distribution for `Island` given `Species`\n\n+ Values within columns: conditional distribution for `Species` given `Island`\n\n+ Bottom right: total number of observations\n\n---\n\n## Connecting distributions to visualizations\n\nFive distributions for two categorical variables $A$ and $B$:\n\n- __Marginals__:  $P(A)$ and $P(B)$\n\n- __Conditionals__: $P(A | B)$ and $P(B|A)$\n\n- __Joint__: $P(A, B)$\n\nWe use bar charts to visualize marginal distributions for categorical variables...\n\n. . .\n\n**And we'll use more bar charts to visualize conditional and joint distributions!**\n\n---\n\n## Stacked bar charts - a bar chart of spine charts\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\npenguins |>\n  ggplot(aes(x = species, fill = island)) +\n  geom_bar() + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n::: {style=\"font-size: 75%;\"}\n\n+ Easy to see marginal of `species`,  i.e., $P($ `x` $)$\n\n+ Can see conditional of `island` | `species`,  i.e., $P($ `fill` | `x` $)$\n\n+ Harder to see conditional of `species` | `island`,  i.e., $P($ `x` | `fill` $)$\n\n:::\n\n---\n\n## Side-by-side bar charts\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = species, fill = island)) + \n  geom_bar(position = \"dodge\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n::: {style=\"font-size: 75%;\"}\n\n+ Easy to see conditional of `island` | `species`,  i.e., $P($ `fill` | `x` $)$\n\n+ Can see conditional of `species` | `island`,  i.e., $P($ `x` | `fill` $)$\n\n:::\n\n---\n\n## Side-by-side bar charts\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = species, fill = island)) + \n  geom_bar(position = position_dodge(preserve = \"single\")) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n::: {style=\"font-size: 75%;\"}\n\n+ Easy to see conditional of `island` | `species`,  i.e., $P($ `fill` | `x` $)$\n\n+ Can see conditional of `species` | `island`,  i.e., $P($ `x` | `fill` $)$\n\n:::\n\n---\n\n## [Complete](https://tidyr.tidyverse.org/reference/complete.html) missing values to preserve location\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-6\"}\npenguins |>\n  count(species, island) |>\n  complete(species = unique(species), island = unique(island), \n           fill = list(n = 0)) |>\n  ggplot(aes(x = species, y = n, fill = island)) + \n  geom_bar(stat = \"identity\", position = \"dodge\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What do you prefer?\n\n\n::: {.cell layout-ncol=\"2\" layout-align=\"center\"}\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-7-1.png){fig-align='center' width=960}\n:::\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-7-2.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Chi-squared test for 1D categorical data:\n\n::: {style=\"font-size: 75%;\"}\n\n+ __Null hypothesis__ $H_0$: $p_1 = p_2 = \\dots = p_K$, compute the test statistic:\n\n$$\n\\chi^2 = \\sum_{j=1}^K \\frac{(O_j - E_j)^2}{E_j}\n$$\n\n+ $O_j$: observed counts in category $j$\n\n+ $E_j$: expected counts under $H_0$, i.e., each category is equally to occur $n / K = p_1 = p_2 = \\dots = p_K$\n\n:::\n\n. . .\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nchisq.test(table(penguins$species))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tChi-squared test for given probabilities\n\ndata:  table(penguins$species)\nX-squared = 31.907, df = 2, p-value = 1.179e-07\n```\n:::\n:::\n\n\n---\n\n## Inference for 2D categorical data \n\n::: {style=\"font-size: 75%;\"}\n\nAgain we use the __chi-squared test__:\n\n+ __Null hypothesis__ $H_0$: variables $A$ and $B$ are independent, compute the test statistic:\n\n\n$$\\chi^2 = \\sum_{i}^{K_A} \\sum_{j}^{K_B} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$$\n\n\n+ $O_{ij}$: observed counts in contingency table\n\n+ $E_{ij}$: expected counts under $H_0$\n\n$$\n\\begin{aligned}\nE_{ij} &= n \\cdot P(A = a_i, B = b_j) \\\\\n&= n \\cdot P(A = a_i) P(B = b_j) \\\\\n&= n \\cdot \\left( \\frac{n_{i \\cdot}}{n} \\right) \\left( \\frac{ n_{\\cdot j}}{n} \\right)\n\\end{aligned}\n$$\n\n:::\n\n---\n\n## Inference for 2D categorical data \n\n::: {style=\"font-size: 75%;\"}\n\nAgain we use the __chi-squared test__:\n\n+ __Null hypothesis__ $H_0$: variables $A$ and $B$ are independent, compute the test statistic:\n\n\n$$\\chi^2 = \\sum_{i}^{K_A} \\sum_{j}^{K_B} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$$\n\n\n+ $O_{ij}$: observed counts in contingency table\n\n+ $E_{ij}$: expected counts under $H_0$\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nchisq.test(table(penguins$species, penguins$island))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table(penguins$species, penguins$island)\nX-squared = 299.55, df = 4, p-value < 2.2e-16\n```\n:::\n:::\n\n\n---\n\n## Visualize independence test with mosaic plots\n\n::: {style=\"font-size: 75%;\"}\n\nTwo variables are __independent__ if knowing the level of one tells us nothing about the other\n\n+ i.e.  $P(A | B) = P(A)$, and that $P(A, B) = P(A) \\times P(B)$\n\nCreate a __mosaic__ plot using __base `R`__\n\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaicplot(table(penguins$species, penguins$island)) \n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Shade by _Pearson residuals_\n\n::: {style=\"font-size: 75%;\"}\n\n+ The __test statistic__ is: \n\n$$\\chi^2 = \\sum_{i}^{K_A} \\sum_{j}^{K_B} \\frac{(O_{ij} - E_{ij})^2}{E_{ij}}$$\n\n+ Define the _Pearson residuals_ as:\n\n$$r_{ij} = \\frac{O_{ij} - E_{ij}}{\\sqrt{E_{ij}}}$$\n\n- Side-note: In general, Pearson residuals are $\\frac{\\text{residuals}}{\\sqrt{\\text{variance}}}$\n\n:::\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n+ $r_{ij} \\approx 0 \\rightarrow$ observed counts are close to expected counts\n\n+ $|r_{ij}| > 2 \\rightarrow$ \"significant\" at level $\\alpha = 0.05$.\n\n+ Very positive $r_{ij} \\rightarrow$ more than expected, while very negative $r_{ij} \\rightarrow$ fewer than expected\n\n+ **Color by Pearson residuals** to tell us which combos are much bigger/smaller than expected.\n\n:::\n\n---\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaicplot(table(penguins$species, penguins$island), shade = TRUE)\n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaicplot(table(penguins$island, penguins$sex), shade = TRUE,\n           main = \"Distribution of penguins' sex does not vary across islands\")\n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-12-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Titanic Dataset Example\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntitanic <- read_csv(\"https://raw.githubusercontent.com/ryurko/DataViz-Class-Data/main/titanic.csv\")\n```\n:::\n\n\n__Question__: Does survival (yes/no) depend on cabin (1st/2nd/3rd)?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ntable(\"Survived?\" = titanic$Survived, \"Class\" = titanic$Pclass)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         Class\nSurvived?   1   2   3\n        0  64  90 270\n        1 120  83  85\n```\n:::\n:::\n\n\n. . .\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nchisq.test(table(\"Survived?\" = titanic$Survived, \"Class\" = titanic$Pclass))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n\tPearson's Chi-squared test\n\ndata:  table(`Survived?` = titanic$Survived, Class = titanic$Pclass)\nX-squared = 91.081, df = 2, p-value < 2.2e-16\n```\n:::\n:::\n\n\n\n__Conclusion__: Class and survival are dependent - but how?\n\n---\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nmosaicplot(table(titanic$Pclass, titanic$Survived), shade = TRUE,\n           xlab = \"Passenger Class\", ylab = \"Survived?\", main = \"How are they related?\")\n```\n\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-16-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## [Guardian](https://www.theguardian.com/news/datablog/2009/mar/20/1): 1000 songs to hear before you die\n\n![](https://upload.wikimedia.org/wikipedia/commons/8/84/Mosaic-big.png?20090726044211){fig-align=\"center\"width=60%}\n\n---\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](05-2dcat_files/figure-revealjs/unnamed-chunk-17-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Recap and next steps\n\n::: {style=\"font-size: 75%;\"}\n\n+ For 2D categorical data we create visualizations for marginal, conditional, and joint distributions\n\n+ Can create stacked and side-by-side bar charts to visualize 2D categorical data\n\n+ Perform 2D Chi-squared test to test if two categorical variables are associated with each other\n\n+ Create mosaic plots to visualize 2D categorical data\n\n+ Shade mosaic plot tiles by Pearson residuals to see what drives association between two categorical variables (if any)\n\n:::\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n+ **HW1 is due TONIGHT and you have Lab 3 on Friday!**\n\n+ **Next time**: Visualizing 1D quantitative data\n\n+ Recommended reading: [CW Chapter 11 Visualizing nested proportions](https://clauswilke.com/dataviz/nested-proportions.html)\n\n:::\n\n",
    "supporting": [
      "05-2dcat_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}