{
  "hash": "5d39fbc540897868b68da373a4e83642",
  "result": {
    "markdown": "---\ntitle: \"Density Estimation\"\nauthor: \"Prof Ron Yurko\"\nfooter:  \"[statds-36315-spring25](https://ryurko.github.io/statds-36315-spring25/)\"\ndate: 2025-02-05\nengine: knitr\nformat:\n  revealjs:\n    theme: theme.scss\n    chalkboard: true\n    pdf-separate-fragments: true\n    slide-number: c/t\n    smaller: true\n    code-line-numbers: true\n    linestretch: 1.25\n    html-math-method:\n      method: mathjax\n      url: \"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"\n---\n\n\n\n\n## Announcements, previously, and today...\n\n::: {style=\"font-size: 80%;\"}\n\n+ **HW2 is due TONIGHT by 11:59 PM** \n\n+ **You have Lab 4 again on Friday!**\n\nOffice hours schedule:\n\n+ My office hours (BH 132D): Wednesdays and Thursdays @ 2 PM\n\n+ Anna (zoom): Mondays @ 2 PM; and Perry (zoom): Wednesdays @ 11 AM\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n\n+ Visualize 1D quantitative data to inspect center, spread, and shape\n\n+ Boxplots are only a display of summary statistics (i.e., they suck)\n\n+ Histograms display shape of the distribution, but comes with tradeoffs\n\n+ Density curves provide an easy way to visualize conditional distributions\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n**TODAY:**\n\n+ Displaying smooth densities\n\n+ How does kernel density estimation work?\n\n:::\n\n---\n\n## Continuous Densities\n\nDistribution of any __continuous__ random variable $X$ is defined by a __probability density function__ (PDF), typically denoted by $f(x)$\n\n- __Probability continuous variable $X$ takes a particular value is 0__, _why?_\n\nUse PDF to provide a relative likelihood,\n\n  - e.g., Normal distribution: $f(x) = \\frac{1}{\\sqrt{2 \\pi \\sigma^2}} \\exp(- \\frac{(x - \\mu)^2}{2\\sigma^2})$\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n**Properties of densities**\n\n:::\n\n::: {.column width=\"50%\"}\n\n**How do we estimate densities?**\n\n:::\n\n::::\n\n---\n\n## Normal distribution\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/7/74/Normal_Distribution_PDF.svg/440px-Normal_Distribution_PDF.svg.png){fig-align=\"center\" width=100%}\n\n---\n\n## Uniform distribution\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/Uniform_Distribution_PDF_SVG.svg/500px-Uniform_Distribution_PDF_SVG.svg.png){fig-align=\"center\" width=100%}\n\n---\n\n## Gamma (also Exponential and Chi-squared) distribution\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/e/e6/Gamma_distribution_pdf.svg/650px-Gamma_distribution_pdf.svg.png){fig-align=\"center\" width=100%}\n\n---\n\n## Beta distribution\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Beta_distribution_pdf.svg/650px-Beta_distribution_pdf.svg.png){fig-align=\"center\" width=100%}\n\n---\n\n## Normalize histogram frequencies with density\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3-4\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_histogram(aes(y = after_stat(density), fill = species),\n                 position = \"identity\", alpha = 0.3) \n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Can use density curves instead\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(aes(color = species))\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Kernel density estimation\n\n__Goal__: estimate PDF $f(x)$ for all possible values (assuming it is continuous & smooth)\n\n. . .\n\n$$\n\\text{Kernel density estimate: } \\hat{f}(x) = \\frac{1}{n} \\sum_{i=1}^n \\frac{1}{h} K_h(x - x_i)\n$$\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n- $n =$ sample size, $x =$ new point to estimate $f(x)$ (does NOT have to be in dataset!)\n\n:::\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n- $h =$ __bandwidth__, analogous to histogram bin width, ensures $\\hat{f}(x)$ integrates to 1\n\n- $x_i =$ $i$th observation in dataset\n\n:::\n\n. . .\n\n::: {style=\"font-size: 75%;\"}\n\n- $K_h(x - x_i)$ is the __Kernel__ function, creates __weight__ given distance of $i$th observation from new point \n  - as $|x - x_i| \\rightarrow \\infty$ then $K_h(x - x_i) \\rightarrow 0$, i.e. further apart $i$th row is from $x$, smaller the weight\n  \n  - as __bandwidth__ $h \\uparrow$ weights are more evenly spread out (as $h \\downarrow$ more concentrated around $x$) \n\n  - typically use [__Gaussian__ / Normal](https://en.wikipedia.org/wiki/Normal_distribution) kernel: $\\propto e^{-(x - x_i)^2 / 2h^2}$\n  \n  - $K_h(x - x_i)$ is large when $x_i$ is close to $x$\n  \n:::\n\n---\n\n## [Wikipedia example](https://en.wikipedia.org/wiki/Kernel_density_estimation)\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Comparison_of_1D_histogram_and_KDE.png/1000px-Comparison_of_1D_histogram_and_KDE.png){fig-align=\"center\" width=100%}\n\n---\n\n## We display __kernel density estimates__ with [`geom_density()`](https://ggplot2.tidyverse.org/reference/geom_density.html)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-4-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Choice of [kernel?](https://en.wikipedia.org/wiki/Kernel_(statistics))\n\n![](https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Kernels.svg/1000px-Kernels.svg.png){fig-align=\"center\" width=70%}\n\n\n---\n\n## What about the bandwidth? \n\nUse __Gaussian reference rule__ (_rule-of-thumb_) $\\approx 1.06 \\cdot \\sigma \\cdot n^{-1/5}$, where $\\sigma$ is the observed standard deviation\n\nModify the bandwidth using the `adjust` argument - __value to multiply default bandwidth by__\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(adjust = 0.5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## What about the bandwidth? \n\nUse __Gaussian reference rule__ (_rule-of-thumb_) $\\approx 1.06 \\cdot \\sigma \\cdot n^{-1/5}$, where $\\sigma$ is the observed standard deviation\n\nModify the bandwidth using the `adjust` argument - __value to multiply default bandwidth by__\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\npenguins |>\n  ggplot(aes(x = flipper_length_mm)) + \n  geom_density(adjust = 2) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-6-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## CAUTION: dealing with bounded data...\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nset.seed(101)\nbound_data <- tibble(fake_x = runif(100))\n\nbound_data |>\n  ggplot(aes(x = fake_x)) +\n  geom_density() +\n  geom_rug(alpha = 0.5) + #<<\n  stat_function(data = \n                  tibble(fake_x = c(0, 1)),\n                fun = dunif, color = \"red\") +\n  scale_x_continuous(limits = c(-.5, 1.5))\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/bound-dens-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Visualizing conditional distributions: violin plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"2-4\"}\npenguins |>\n  ggplot(aes(x = species, y = flipper_length_mm)) +\n  geom_violin() +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-8-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n---\n\n## Visualizing conditional distributions: violin plots\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"4\"}\npenguins |>\n  ggplot(aes(x = species, y = flipper_length_mm)) +\n  geom_violin() + \n  geom_boxplot(width = .2) +\n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-9-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Visualizing conditional distributions: [`ggridges`](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,3-4\"}\nlibrary(ggridges)\npenguins |>\n  ggplot(aes(x = flipper_length_mm, y = species)) +\n  geom_density_ridges(rel_min_height = 0.01)\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-10-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Visualizing conditional distributions: [`ggbeeswarm`](https://github.com/eclarke/ggbeeswarm)\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-line-numbers=\"1,3-4\"}\nlibrary(ggbeeswarm)\npenguins |>\n  ggplot(aes(x = flipper_length_mm, y = species)) +\n  geom_beeswarm(cex = 1.5) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](07-density-estimation_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n---\n\n## Recap and next steps\n\n::: {style=\"font-size: 80%;\"}\n\n+ Smoothed densities are a flexible tool for visualizing 1D distribution\n\n+ There are two choices we need to make for kernel density estimation:\n\n  1. Bandwidth: Determines _smoothness_ of distribution, usually data-driven choice\n  \n  2. Kernel: Determines how much _influence_ each observation should have on each other during estimation, usually context driven\n\n+ Several other types of density-based displays: violins, ridges, beeswarm plots\n\n:::\n\n. . .\n\n::: {style=\"font-size: 80%;\"}\n\n+ **HW2 is due TONIGHT and you have Lab 4 on Friday**\n\n+ **Next time**: Graphical inference for 1D quantitative data\n\n+ Recommended reading: [CW Chapter 7 Visualizing distributions: Histograms and density plots](https://clauswilke.com/dataviz/histograms-density-plots.html)\n\n:::\n\n",
    "supporting": [
      "07-density-estimation_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}